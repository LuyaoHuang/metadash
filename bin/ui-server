#!/bin/env node

const path = require('path')
const express = require('express')
const proxyMiddleware = require('http-proxy-middleware')
const morgan = require('morgan')

// default port where dev server listens for incoming traffic
const apiServerUrl = process.env.API_SERVER_URL || 'http://localhost:5000'
const port = process.env.PORT || 8080

// automatically open browser, if not set will be false
// https://github.com/chimurai/http-proxy-middleware
const proxyTable = {
  '/api': {
    target: apiServerUrl
  },
  '/docs': {
    target: apiServerUrl
  }
}

const app = express()

// First, Proxy API requests
Object.keys(proxyTable).forEach(function (context) {
  var options = proxyTable[context]
  if (typeof options === 'string') {
    options = { target: options }
  }
  app.use(proxyMiddleware(options.filter || context, options))
})

// Logging
app.use(morgan('short'))

// Serve static assets
const staticPath = path.join(path.dirname(__filename), '../metadash/dist')
const indexPath = path.join(path.dirname(__filename), '../metadash/dist/index.html')

app.use(express.static(staticPath))

// Fallback to index for SPA
app.get('*', function (request, response) {
  response.sendFile(indexPath)
})

const server = app.listen(port, '0.0.0.0')
console.log('Server Started')

module.exports = {
  close: () => {
    server.close()
  }
}
